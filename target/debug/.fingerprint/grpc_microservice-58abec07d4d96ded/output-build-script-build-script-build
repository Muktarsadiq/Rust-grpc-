{"$message_type":"diagnostic","message":"missing parameters for function definition","code":null,"level":"error","spans":[{"file_name":"build.rs","byte_start":7,"byte_end":7,"line_start":1,"line_end":1,"column_start":8,"column_end":8,"is_primary":true,"text":[{"text":"fn main -> Result<(), Box<dyn std::error::Error>> {","highlight_start":8,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add a parameter list","code":null,"level":"help","spans":[{"file_name":"build.rs","byte_start":7,"byte_end":7,"line_start":1,"line_end":1,"column_start":8,"column_end":8,"is_primary":true,"text":[{"text":"fn main -> Result<(), Box<dyn std::error::Error>> {","highlight_start":8,"highlight_end":8}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: missing parameters for function definition\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbuild.rs:1:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main -> Result<(), Box<dyn std::error::Error>> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add a parameter list\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn main\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m -> Result<(), Box<dyn std::error::Error>> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"build.rs","byte_start":56,"byte_end":113,"line_start":2,"line_end":2,"column_start":5,"column_end":62,"is_primary":true,"text":[{"text":"    tonic_build::compile_protos(proto:\"proto/payments.proto\")?;","highlight_start":5,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `tonic_build::compile_protos` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"build.rs","byte_start":83,"byte_end":84,"line_start":2,"line_end":2,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"    tonic_build::compile_protos(proto:\"proto/payments.proto\")?;","highlight_start":32,"highlight_end":33}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"build.rs","byte_start":112,"byte_end":113,"line_start":2,"line_end":2,"column_start":61,"column_end":62,"is_primary":true,"text":[{"text":"    tonic_build::compile_protos(proto:\"proto/payments.proto\")?;","highlight_start":61,"highlight_end":62}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `tonic_build::compile_protos` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"build.rs","byte_start":84,"byte_end":90,"line_start":2,"line_end":2,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"    tonic_build::compile_protos(proto:\"proto/payments.proto\")?;","highlight_start":33,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbuild.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    tonic_build::compile_protos(proto:\"proto/payments.proto\")?;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `tonic_build::compile_protos` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    tonic_build::compile_protos\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\u001b[0mproto:\"proto/payments.proto\"\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m?;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `tonic_build::compile_protos` is a function, use the arguments directly\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    tonic_build::compile_protos(\u001b[0m\u001b[0m\u001b[38;5;9mproto:\u001b[0m\u001b[0m\"proto/payments.proto\")?;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    tonic_build::compile_protos(\"proto/payments.proto\")?;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
